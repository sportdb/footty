#!/usr/bin/env ruby

## tip: to test run:
##   ruby -I ./lib bin/fbtree

require 'fbtok'

args = ARGV
 

opts = {
    debug: true,
}

parser = OptionParser.new do |parser|
  parser.banner = "Usage: #{$PROGRAM_NAME} [options] PATH"


  parser.on( "-q", "--quiet",
             "less debug output/messages - default is (#{!opts[:debug]})" ) do |debug|
    opts[:debug] = false
  end
  parser.on( "--verbose", "--debug",
               "turn on verbose / debug output (default: #{opts[:debug]})" ) do |debug|
    opts[:debug] = true
  end
end
parser.parse!( args )


if opts[:debug]
  puts "OPTS:"
  p opts
  puts "ARGV:"
  p args

  SportDb::Parser::Linter.debug = true    
  SportDb::Parser::Opts.debug   = true
end





## todo/check - use packs or projects or such
##                instead of specs - why? why not?
   paths = if args.empty?
             [
               '/sports/openfootball/euro/2021--europe/euro.txt',
               '/sports/openfootball/euro/2024--germany/euro.txt',
             ]
          else
            ## check for directories
            ##   and auto-expand
            SportDb::Parser::Opts.expand_args( args )
          end



def dump_tree_stats( tree )
  stats = Hash.new(0)  ## track counts only for now
  tree.each do |node|
     stats[ node.class ] += 1 
  end

  match_count  = stats[ RaccMatchParser::MatchLine ]
  goal_count   = stats[ RaccMatchParser::GoalLine ]
  lineup_count = stats[ RaccMatchParser::LineupLine ] 

  puts "   #{match_count} MatchLine(s)"     if match_count > 0
  puts "   #{goal_count} GoalLine(s)"       if goal_count > 0
  puts "   #{lineup_count} LineupLine(s)"   if lineup_count > 0
end




linter = SportDb::Parser::Linter.new


paths.each_with_index do |path,i|

  puts "==> [#{i+1}/#{paths.size}] reading >#{path}<..."

  tree = linter.read( path, parse: true )

  dump_tree_stats( tree )
end


puts "bye"


